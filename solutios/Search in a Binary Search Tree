/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        while(root!=NULL && root->val!=val) {
            //root = val < root->val ? root->left : root->right;
            if(val < root->val) {
                root = root->left;
            }
            else {
                root = root->right;
            }
        }
        return root;

/*
TC = O(log2N)
SC = O(1)
*/
        

//Solution using Recursion     
        
        /*if(root==NULL) {
            return root;
        }
        if(root->val == val) {
            return root;
        }
        if(val < root->val) {
            root = searchBST(root->left, val);
        }
        else {
            root = searchBST(root->right, val);
        }

        return root;*/
    }
};
