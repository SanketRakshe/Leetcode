class Solution {
public:
    int strStr(string haystack, string needle) {
        int hlen = haystack.length();
        int nlen = needle.length();
        //create a nIndex to keep a track of needle string and returning the answer..
        int nIndex = 0;

        for(int i=0; i<hlen; i++) {
            //as long as characters are equal then increment the nIndex;
            if(haystack[i] == needle[nIndex]) {
                nIndex++;
            }
            else {
                //start from the next index of previous start index
                i = i - nIndex;
                //nIndex should be start with the 0 index
                nIndex = 0;
            }

            //check if needleIndex is reached to the needle length
            if(nIndex == nlen) {
                return i - nlen +1;
            }
        }
        return -1;
    }
};


/*TC = O(m*n)
  SC = O(1)*/
