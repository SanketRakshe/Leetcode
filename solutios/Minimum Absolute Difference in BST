/**

 * Definition for a binary tree node.

 * struct TreeNode {

 *     int val;

 *     TreeNode *left;

 *     TreeNode *right;

 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}

 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}

 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}

 * };

 */

class Solution {

    int minDiffrence = INT_MAX;

    TreeNode* prevNode;

    void inOrederTraversal(TreeNode* root) {

        if(root == NULL) return;

        inOrederTraversal(root->left);

        if(prevNode) {

            minDiffrence = min(minDiffrence, root->val - prevNode->val); 

        }

        prevNode = root;

        inOrederTraversal(root->right);

    }

public:

    int getMinimumDifference(TreeNode* root) {

        inOrederTraversal(root);

        return minDiffrence;

    }

};

/*

Time complexity:O(N)

Space complexity:O(N)

*/
