/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int kthSmallest(TreeNode* root, int k) {
        inorder(root, k);
        return ans;
    }
    void inorder(TreeNode* root, int &k) {
        if(root==NULL) {
            return;
        }

        inorder(root->left, k);
        if(--k == 0) {
            ans = root->val;
            return;
        }
        inorder(root->right, k);
    }

    /*
    TC = O(N)
    SC = O(N)
    */

    /*vector<int> v;
    int kthSmallest(TreeNode* root, int k) {
        inorder(root, k);
        int ans = v[k-1];
        return ans;
    }
    void inorder(TreeNode* root, int k) {
        if(root == NULL) {
            return;
        }
        inorder(root->left, k);
        v.push_back(root->val);
        inorder(root->right, k);
    }*/
    /*
    TC = O(N)
    SC = O(N)
    */
};
