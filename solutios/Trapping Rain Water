class Solution {
public:
    void damn(vector<int> &height, vector<int> &left, vector<int> &right) {
        int n = height.size();
        int mx = -1;
        for(int i = 0; i<n; i++) {
            left[i] = mx;
            mx = max(mx, height[i]);
        }
        mx = -1;
        for(int i=n-1; i>=0; i--) {
            right[i] = mx;
            mx = max(mx, height[i]);
        }
    }
    int trap(vector<int>& height) {
        int n = height.size();
        vector<int> left(n);
        vector<int> right(n);

        damn(height, left, right);
        int ans = 0;
        for(int i=0; i<n; i++) {
            if(min(left[i], right[i]) > height[i]) {
                ans += min(left[i], right[i]) - height[i];
            }
        }
        return ans;
    }
};

/*
TC = O(n)
SC = O(n)
 */
