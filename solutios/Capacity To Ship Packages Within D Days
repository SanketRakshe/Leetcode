class Solution {
public:
    int req_days(int cap, vector<int> & items) {
        int day = 1;
        int rem_cap = cap;
        int n = items.size();
        for(int i = 0; i < n; i++) {
            if(items[i] <= rem_cap) {
                rem_cap -= items[i];
            }
            else {
                day++;
                rem_cap = cap;
                rem_cap -= items[i];
            }
        }
        return day;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int max_ele = INT_MIN;
        int sum = 0;
        int n = weights.size();
        for(int i = 0; i < n; i++) {
            max_ele = max(max_ele, weights[i]);
            sum += weights[i];
        }

        int s = max_ele;
        int e = sum;
        int ans = INT_MAX;

        while(s <= e) {
            int mid = s + (e - s) / 2;
            int d = req_days(mid, weights);
            if(d <= days) {
                ans = mid;
                e = mid - 1;
            }
            else {
                s = mid + 1;
            }
        }
        return ans;
    }
};







